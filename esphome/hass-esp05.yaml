esphome:
  name: hass-esp05
  platform: ESP32
  board: esp32dev

  on_boot:
      - output.turn_off: onboard_led

time:
  - platform: homeassistant
    id: esptime

# Enable logging
logger:
  baud_rate: 0
#  level: VERY_VERBOSE

switch:
  - platform: restart
    name: "esp05 Restart"

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

font:
  - file: "fonts/Ldfcomicsans-jj7l.ttf"
    id: font_cs
    size: 28
  - file: "fonts/ArialTh.ttf"
    id: font_arth
    size: 20
  - file: "fonts/Black Gladiator.ttf"
    id: font_black_gladiator
    size: 70
  - file: "fonts/planet benson 2.ttf"
    id: font_planet_benson_2
    size: 32


  - file: 'fonts/Google Sans Bold.ttf'
    id: clock_font
    size: 90
    glyphs: [0, 1, 2, 3, 4, 5, 6, 7 ,8, 9, ':']

  - file: 'fonts/Google Sans Medium.ttf'
    id: temp_font
    size: 32
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z','å', 'ä', 'ö', '/']
  - file: 'fonts/Google Sans Bold.ttf'
    id: status_font
    size: 18
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z', 'å', 'ä', 'ö', '/']

  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: icon_font_small
    size: 22
    glyphs: [
      '󰌪', # mdi-leaf
    ]
  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: icon_font_new
    size: 32
    glyphs: [
      '󰽔', # mdi-home-thermometer
      '󰧿', # mdi-lighthouse
      '󰟑', # home-automation
      '󰂒',  # beach
      '󰓣', # swim
      "󰽕", # mdi-home-thermometer-outline
      '󰕊', # umbrella
      # Sun
      "󰖛", # mdi-weather-sunset-down
      "󰖜", # mdi-weather-sunset-up
    ]
  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: wifi_font
    size: 32
    glyphs: [
      # Wifi
      '󰤟', # mdi-wifi-strength-1
      '󰤢', # mdi-wifi-strength-2
      '󰤥', # mdi-wifi-strength-3
      '󰤨', # mdi-wifi-strength-4
      '󰤫', # mdi-wifi-strength-alert-outline
      ]
  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: weather_font
    size: 50
    glyphs: [
      # Weather
      "󰖙", # mdi-weather-sunny
      "󰖔", # mdi-weather-night
      "󰖐", # mdi-weather-cloudy
      "󰖖", # mdi-weather-pouring
      "󰼵", # mdi-weather-snowy-rainy
      "󰼴", # mdi-weather-snowy-heavy
      "󰖞", # mdi-weather-windy-variant
      "󰖑", # mdi-weather-fog
      "󰼱", # mdi-weather-night-partly-cloudy
      "󰖕", # mdi-weather-partly-cloudy
    ]
  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: moon_font
    size: 50
    glyphs: [
      # Moon
      "󰽡", # first_quarter
      "󰽢", # full_moon
      "󰽣", # last_quarter
      "󰽤", # new_moon
      "󰽥", # waning_crescent
      "󰽦", # waning_gibbous
      "󰽧", # waxing_crescent
      "󰽨", # waxing_gibbous
      ]



spi:
  clk_pin: GPIO13
  mosi_pin: GPIO17

display:
  - platform: waveshare_epaper
    id: esp05_epaper
    cs_pin: GPIO12
    busy_pin: GPIO19
    reset_pin: GPIO21
    dc_pin: GPIO3
    model: 4.20in
    update_interval: 300s
    
    lambda: |-

      int x, y, c;
      ESP_LOGI("display", "Updating..");

      /* Print time in HH:MM format */
      it.strftime(125, -10, id(clock_font), TextAlign::TOP_CENTER, "%H:%M", id(esptime).now());

      // it.line(259, -10, 259, 200);it.line(261, 0, 261, 200);it.line(260, 0, 260, 200);
      // it.line(0, 200, 259, 200);it.line(0, 201, 261, 201);it.line(0, 202, 260, 202);



      // it.print(60, 0, id(font_black_gladiator), "Conditions");
      
      it.printf(0, 120, id(status_font), "esp01:");
      it.printf(60, 107, id(temp_font), "%.1f° F", id(esp01_temperature).state);
      
      it.printf(0, 160, id(status_font), "esp02:");
      it.printf(60, 147, id(temp_font), "%.1f° F", id(esp02_temperature).state);
      
      it.printf(0, 200, id(status_font), "esp03:");
      it.printf(60, 187, id(temp_font), "%.1f° F", id(esp03_temperature).state);
      
      it.printf(180, 120, id(status_font), "esp06:");
      it.printf(240, 107, id(temp_font), "%.1f° F", id(esp06_temperature).state);
      
      it.printf(180, 160, id(status_font), "esp08:");
      it.printf(240, 147, id(temp_font), "%.1f° F", id(esp08_temperature).state);
      
      // it.graph(180, 185, id(esp01_temperature_graph));
      
      // it.graph(180, 237, id(esp05_WiFi_Signal_graph));
      
      // Print time in HH:MM format
      // it.strftime(0, 270, id(font_arth), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());
      
      
      /* WiFi Signal Strength */
      if(id(esp05_WiFi_Signal).has_state()) {
        x = 398, y = 298;
        if (id(esp05_WiFi_Signal).state >= -50) {
            //Excellent
            it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤨");
            ESP_LOGI("WiFi", "Exellent");
        } else if (id(esp05_WiFi_Signal).state  >= -60) {
            //Good
            it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤥");
            ESP_LOGI("WiFi", "Good");
        } else if (id(esp05_WiFi_Signal).state  >= -67) {
            //Fair
            it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤢");
            ESP_LOGI("WiFi", "Fair");
        } else if (id(esp05_WiFi_Signal).state  >= -70) {
            //Weak
            it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤟");
            ESP_LOGI("WiFi", "Weak");
        } else {
            //Unlikely working signal
            it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤫");
            ESP_LOGI("WiFi", "Unlikely");
        }
      }
      
      
      
      
      
graph:
  # Show bare-minimum auto-ranged graph
  - id: esp01_temperature_graph
    sensor: esp01_temperature
    duration: 24h
    width: 200
    height: 100

#  - id: esp05_WiFi_Signal_graph
#    sensor: esp05_WiFi_Signal
#    duration: 1h
#    width: 200
#    height: 50


sensor:

  - platform: wifi_signal
    name: "esp05 WiFi Signal"
    id: esp05_WiFi_Signal
    update_interval: 60s
    
  - platform: uptime
    name: "esp05 Uptime"
    update_interval: 60s
  
  - platform: homeassistant
    entity_id: sensor.esp01_temperature
    id: esp01_temperature
    internal: true
    
  - platform: homeassistant
    entity_id: sensor.esp02_temperature
    id: esp02_temperature
    internal: true

  - platform: homeassistant
    entity_id: sensor.esp03_temperature
    id: esp03_temperature
    internal: true
  
  - platform: homeassistant
    entity_id: sensor.esp06_temperature
    id: esp06_temperature
    internal: true
    
  - platform: homeassistant
    entity_id: sensor.esp08_temperature
    id: esp08_temperature
    internal: true



output:
  - platform: gpio
    id: onboard_led
    pin:
      number: 2
      inverted: False

light:
  - platform: binary
    name: "Onboard LED"
    output: onboard_led
