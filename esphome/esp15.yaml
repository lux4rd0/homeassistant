substitutions:
  devicename: esp15
  run_time: 2min
  sleep_time: 15min
  night_sleep_time: 6h
esphome:
  name: '${devicename}'
  platform: ESP32
  board: esp32dev
debug:
  update_interval: 60s
time:
  - platform: homeassistant
    id: ntp
logger:
  baud_rate: 0
  level: DEBUG
switch:
  - platform: restart
    name: '${devicename} Restart'
mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: true
api: null
ota:
  password: !secret ota_password
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: '${devicename}'
    password: !secret wifi_password
  domain: .tylephony.com
captive_portal: null
web_server:
  port: 80
deep_sleep:
  run_duration: '${run_time}'
  sleep_duration: '${sleep_time}'
  id: deep_sleep_control
  esp32_ext1_wakeup:
    pins: GPIO39
    mode: ALL_LOW
font:
  - file: fonts/Calama.ttf
    id: font_day
    size: 96
  - file: fonts/Calama.ttf
    id: font_date
    size: 60
  - file: fonts/Calama.ttf
    id: font_hi_lo_words
    size: 60
  - file: fonts/Calama.ttf
    id: font_last_updated
    size: 46
  - file: fonts/digital-7 (mono).ttf
    id: font_hi_lo_temperature
    size: 110
  - file: fonts/digital-7 (mono).ttf
    id: font_current_temperature
    size: 240
  - file: fonts/Google Sans Bold.ttf
    id: font_current_degree
    size: 150
  - file: fonts/Google Sans Bold.ttf
    id: font_hi_lo_degree
    size: 70
  - file: fonts/dripicons-weather.ttf
    id: font_icons_large
    size: 330
    glyphs:
      - /
      - ''''
      - a
      - k
      - R
      - A
      - E
      - D
      - '"'
      - t
      - P
      - O
      - 'y'
      - x
      - b
      - '%'
      - .
      - w
      - j
  - file: fonts/dripicons-weather.ttf
    id: font_icons_small
    size: 165
    glyphs:
      - /
      - ''''
      - a
      - k
      - R
      - A
      - E
      - D
      - '"'
      - t
      - P
      - O
      - 'y'
      - x
      - b
      - '%'
      - .
      - w
      - j
  - file: fonts/materialdesignicons-webfont.ttf
    id: font_battery
    size: 32
    glyphs:
      - "\U000F0079"
      - "\U000F0081"
      - "\U000F007F"
      - "\U000F007D"
      - "\U000F007B"
      - "\U000F10CD"
  - file: fonts/materialdesignicons-webfont.ttf
    id: font_wifi
    size: 32
    glyphs:
      - "\U000F091F"
      - "\U000F0922"
      - "\U000F0925"
      - "\U000F0928"
      - "\U000F092B"
button:
  - platform: restart
    name: '${devicename} Restart'
    internal: false
  - platform: template
    name: '${devicename} Refresh'
    icon: 'mdi:update'
    on_press:
      then:
        - component.update: '${devicename}_display'
    internal: false
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: '${devicename} Button 1'
    on_press:
      then:
        - component.update: '${devicename}_display'
  - platform: gpio
    pin:
      number: GPIO34
      inverted: true
    name: '${devicename} Button 2'
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    name: '${devicename} Button 3'
  - platform: homeassistant
    id: '${devicename}_prevent_deep_sleep'
    name: '${devicename} Prevent Deep Sleep'
    entity_id: 'input_boolean.${devicename}_prevent_deep_sleep'
external_components:
  - source: 'github://ashald/esphome@lilygo-t5-47'
    components:
      - lilygo_t5_47
display:
  platform: lilygo_t5_47
  full_update_every: 1
  cycles_render: 40
  cycles_invert: 40
  id: '${devicename}_display'
  update_interval: never

  lambda: |-

      // Last Updated
      it.strftime(5, 5, id(font_last_updated), TextAlign::TOP_LEFT, "%I:%M %p", id(ntp).now());
      
      #define wifi_x 5
      #define wifi_y 40
      
      // WiFi Signal Strength
      
      if (id(${devicename}_WiFi_Signal).has_state()) {
        if (id(${devicename}_WiFi_Signal).state >= -50) {
          //Excellent
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_LEFT, "󰤨");
          ESP_LOGI("WiFi", "Exellent");
        } else if (id(${devicename}_WiFi_Signal).state >= -60) {
          //Good
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_LEFT, "󰤥");
          ESP_LOGI("WiFi", "Good");
        } else if (id(${devicename}_WiFi_Signal).state >= -67) {
          //Fair
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_LEFT, "󰤢");
          ESP_LOGI("WiFi", "Fair");
        } else if (id(${devicename}_WiFi_Signal).state >= -70) {
          //Weak
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_LEFT, "󰤟");
          ESP_LOGI("WiFi", "Weak");
        } else {
          //Unlikely working signal
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_LEFT, "󰤫");
          ESP_LOGI("WiFi", "Unlikely");
        }
      }

      #define battery_voltage_x 35
      #define battery_voltage_y 40

      // Battery Voltage
      
      if (id(${devicename}_battery_voltage).has_state()) {
        if (id(${devicename}_battery_voltage).state >= 3.7) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_LEFT, "󰁹");
        } else if (id(${devicename}_battery_voltage).state >= 3.5) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_LEFT, "󰂁");
        } else if (id(${devicename}_battery_voltage).state >= 3.3) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_LEFT, "󰁿");
        } else if (id(${devicename}_battery_voltage).state >= 3.1) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_LEFT, "󰁽");
        } else if (id(${devicename}_battery_voltage).state >= 3.0) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_LEFT, "󰁻");
        } else {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_LEFT, "󱃍");
        }

      }

      #define large_weather_icon_x 240
      #define large_weather_icon_y 2

      // Weather Forecast Icon

      if (id(wf_current_conditions_icon).has_state()) {
        it.printf(large_weather_icon_x, large_weather_icon_y, id(font_icons_large), TextAlign::TOP_CENTER, "%s", id(wf_current_conditions_icon).state.c_str());
        //it.printf(large_weather_icon_x, large_weather_icon_y, id(font_icons_large), TextAlign::TOP_CENTER, " ");
      }

      // Outside Temperature
      it.printf(253, 528, id(font_current_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_current_conditions_air_temperature).state);
      it.printf(253, 475, id(font_current_degree), TextAlign::BASELINE_LEFT, "°");

      // Today's HI LO Temperature

      #define row_0 360

      #define word_high_x_0 315
      #define word_high_y_0 10  + row_0
      #define word_low_x_0 315
      #define word_low_y_0 180 + row_0  
      
      #define temp_state_high_x_0 450
      #define temp_state_high_y_0 80 + row_0
      #define temp_degree_high_x_0 452
      #define temp_degree_high_y_0 56 + row_0

      #define temp_state_low_x_0 450
      #define temp_state_low_y_0 168 + row_0
      #define temp_degree_low_x_0 452
      #define temp_degree_low_y_0 145 + row_0

      it.printf(word_high_x_0, word_high_y_0, id(font_hi_lo_words), TextAlign::TOP_CENTER, "HI");
      it.printf(temp_state_high_x_0, temp_state_high_y_0, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_0_air_temp_high).state);
      it.printf(temp_degree_high_x_0, temp_degree_high_y_0, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      it.printf(word_low_x_0, word_low_y_0, id(font_hi_lo_words), TextAlign::BOTTOM_CENTER, "LO");
      it.printf(temp_state_low_x_0, temp_state_low_y_0, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_0_air_temp_low).state);
      it.printf(temp_degree_low_x_0, temp_degree_low_y_0, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      //it.printf(315, 432, id(font_hi_lo_words), TextAlign::BASELINE_LEFT, "HI");
      //it.printf(450, 450, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_0_air_temp_high).state);
      //it.printf(452, 437, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      //it.printf(315, 510, id(font_hi_lo_words), TextAlign::BASELINE_LEFT, "LO");
      //it.printf(450, 528, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_0_air_temp_low).state);
      //it.printf(452, 515, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      // Forecast Day + 1

      #define small_weather_icon_x_1 675
      #define small_weather_icon_y_1 5
      #define day_x_1 575
      #define day_y_1 68
      #define word_high_x_1 790
      #define word_high_y_1 10
      #define word_low_x_1 790
      #define word_low_y_1 180
      
      #define temp_state_high_x_1 925
      #define temp_state_high_y_1 80
      #define temp_degree_high_x_1 927
      #define temp_degree_high_y_1 56

      #define temp_state_low_x_1 925
      #define temp_state_low_y_1 168
      #define temp_degree_low_x_1 927
      #define temp_degree_low_y_1 145

      if (id(wf_d_fc_1_icon).has_state()) {
        it.printf(small_weather_icon_x_1, small_weather_icon_y_1, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_d_fc_1_icon).state.c_str());
      }

      it.printf(day_x_1, day_y_1, id(font_date), TextAlign::CENTER_RIGHT, "%.0f/%.0f", id(wf_d_fc_1_month_num).state, id(wf_d_fc_1_day_num).state);
      it.printf(day_x_1, day_y_1 + 30, id(font_day), TextAlign::TOP_RIGHT, "%s", id(wf_d_fc_1_day_name).state.substr(0, 3).c_str());

      it.printf(word_high_x_1, word_high_y_1, id(font_hi_lo_words), TextAlign::TOP_CENTER, "HI");
      it.printf(temp_state_high_x_1, temp_state_high_y_1, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_1_air_temp_high).state);
      it.printf(temp_degree_high_x_1, temp_degree_high_y_1, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      it.printf(word_low_x_1, word_low_y_1, id(font_hi_lo_words), TextAlign::BOTTOM_CENTER, "LO");
      it.printf(temp_state_low_x_1, temp_state_low_y_1, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_1_air_temp_low).state);
      it.printf(temp_degree_low_x_1, temp_degree_low_y_1, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      // Forecast Day + 2

      #define row_2 180

      #define small_weather_icon_x_2 675
      #define small_weather_icon_y_2 5 + row_2
      #define day_x_2 575
      #define day_y_2 68 + row_2
      #define word_high_x_2 790
      #define word_high_y_2 10 + row_2
      #define word_low_x_2 790
      #define word_low_y_2 180 + row_2
      
      #define temp_state_high_x_2 925
      #define temp_state_high_y_2 80 + row_2
      #define temp_degree_high_x_2 927
      #define temp_degree_high_y_2 56 + row_2

      #define temp_state_low_x_2 925
      #define temp_state_low_y_2 168 + row_2
      #define temp_degree_low_x_2 927
      #define temp_degree_low_y_2 145 + row_2

      if (id(wf_d_fc_2_icon).has_state()) {
        it.printf(small_weather_icon_x_2, small_weather_icon_y_2, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_d_fc_2_icon).state.c_str());
      }

      it.printf(day_x_2, day_y_2, id(font_date), TextAlign::CENTER_RIGHT, "%.0f/%.0f", id(wf_d_fc_2_month_num).state, id(wf_d_fc_2_day_num).state);
      it.printf(day_x_2, day_y_2 + 30, id(font_day), TextAlign::TOP_RIGHT, "%s", id(wf_d_fc_2_day_name).state.substr(0, 3).c_str());

      it.printf(word_high_x_2, word_high_y_2, id(font_hi_lo_words), TextAlign::TOP_CENTER, "HI");
      it.printf(temp_state_high_x_2, temp_state_high_y_2, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_2_air_temp_high).state);
      it.printf(temp_degree_high_x_2, temp_degree_high_y_2, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      it.printf(word_low_x_2, word_low_y_2, id(font_hi_lo_words), TextAlign::BOTTOM_CENTER, "LO");
      it.printf(temp_state_low_x_2, temp_state_low_y_2, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_2_air_temp_low).state);
      it.printf(temp_degree_low_x_2, temp_degree_low_y_2, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");


      // Forecast Day + 3

      #define row_3 360

      #define small_weather_icon_x_3 675
      #define small_weather_icon_y_3 5 + row_3
      #define day_x_3 575
      #define day_y_3 68 + row_3
      #define word_high_x_3 790
      #define word_high_y_3 10 + row_3
      #define word_low_x_3 790
      #define word_low_y_3 180 + row_3
      
      #define temp_state_high_x_3 925
      #define temp_state_high_y_3 80 + row_3
      #define temp_degree_high_x_3 927
      #define temp_degree_high_y_3 56 + row_3

      #define temp_state_low_x_3 925
      #define temp_state_low_y_3 168 + row_3
      #define temp_degree_low_x_3 927
      #define temp_degree_low_y_3 145 + row_3

      if (id(wf_d_fc_3_icon).has_state()) {
        it.printf(small_weather_icon_x_3, small_weather_icon_y_3, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_d_fc_3_icon).state.c_str());
      }

      it.printf(day_x_3, day_y_3, id(font_date), TextAlign::CENTER_RIGHT, "%.0f/%.0f", id(wf_d_fc_3_month_num).state, id(wf_d_fc_3_day_num).state);
      it.printf(day_x_3, day_y_3 + 30, id(font_day), TextAlign::TOP_RIGHT, "%s", id(wf_d_fc_3_day_name).state.substr(0, 3).c_str());

      it.printf(word_high_x_3, word_high_y_3, id(font_hi_lo_words), TextAlign::TOP_CENTER, "HI");
      it.printf(temp_state_high_x_3, temp_state_high_y_3, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_3_air_temp_high).state);
      it.printf(temp_degree_high_x_3, temp_degree_high_y_3, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      it.printf(word_low_x_3, word_low_y_3, id(font_hi_lo_words), TextAlign::BOTTOM_CENTER, "LO");
      it.printf(temp_state_low_x_3, temp_state_low_y_3, id(font_hi_lo_temperature), TextAlign::BASELINE_RIGHT, "%.0f", id(wf_d_fc_3_air_temp_low).state);
      it.printf(temp_degree_low_x_3, temp_degree_low_y_3, id(font_hi_lo_degree), TextAlign::BASELINE_LEFT, "°");

      // Lines

      it.line(480, 177, 960, 177);
      it.line(480, 356, 960, 356);
      it.line(480, 0, 480, 540);

sensor:
  - platform: wifi_signal
    name: '${devicename} WiFi Signal'
    id: '${devicename}_WiFi_Signal'
    update_interval: 60s
  - platform: uptime
    name: '${devicename} Uptime'
    update_interval: 60s
  - platform: debug
    free:
      name: '${devicename} Heap Free'
    block:
      name: '${devicename} Heap Max Block'
    loop_time:
      name: '${devicename} Loop Time'
  - id: '${devicename}_battery_voltage'
    name: '${devicename} Battery Voltage'
    platform: lilygo_t5_47
    unit_of_measurement: V
    state_class: measurement
    device_class: voltage
    update_interval: 60s
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_air_temperature
    attribute: air_temperature
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_relative_humidity
    attribute: relative_humidity
text_sensor:
  - platform: debug
    device:
      name: '${devicename} Device Info'
      id: '${devicename}_device_info'
  - platform: homeassistant
    entity_id: sensor.weatherflow_precipitation_intensity
    id: weatherflow_precipitation_intensity
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_precip_type
    attribute: precip_type
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_precip_type
    attribute: precip_type
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_precip_type
    attribute: precip_type
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_3
    id: wf_d_fc_3_precip_type
    attribute: precip_type
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_icon
    attribute: icon
    on_value:
      then:
        - script.execute: all_data_received
script:
  - id: all_data_received
    then:
      - component.update: '${devicename}_display'
      - if:
          condition:
            binary_sensor.is_on: '${devicename}_prevent_deep_sleep'
          then:
            - logger.log: 'Skipping sleep, per prevent_deep_sleep'
            - deep_sleep.prevent: deep_sleep_control
          else:
            - script.execute: enter_sleep
  - id: enter_sleep
    then:
      - if:
          condition:
            lambda: |-
              auto time = id(ntp).now();
              if (!time.is_valid()) { 
                return false;
              }
              return (time.hour < 6); 
          then:
            - logger.log: 'Nighttime, entering long sleep for ${night_sleep_time}'
            - deep_sleep.enter:
                id: deep_sleep_control
                sleep_duration: '${night_sleep_time}'
          else:
            - logger.log: 'Daytime, entering short sleep for ${sleep_time}'
            - deep_sleep.enter:
                id: deep_sleep_control
                sleep_duration: '${sleep_time}'
