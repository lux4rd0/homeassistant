esphome:
  name: hass-esp13
  platform: ESP32
  board: featheresp32
  on_boot:
    then:
      script.execute: consider_deep_sleep

# Enable logging
logger:
  baud_rate: 0

switch:
  - platform: restart
    id: esp13_restart
    name: "esp13 Restart"

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

sensor:
  - platform: wifi_signal
    name: "esp13 WiFi Signal"
    update_interval: 5s
    
  - platform: uptime
    name: "esp13 Uptime"
    update_interval: 5s

# Documentation: https://esphome.io/components/sensor/adc.html
  - platform: adc

  # https://learn.adafruit.com/adafruit-huzzah32-esp32-feather/power-management
    pin: A13
    name: "hass-esp13 Battery Voltage"
    update_interval: 5s

  # See https://murt.is/articles/2021-02/huzzah32-battery-monitoring-esphome.md
    attenuation: 11db

  # Calculation based on https://cuddletech.com/?p=1030, modified to account for
  # ESPHome's internal math
  # (https://github.com/esphome/esphome/blob/410fad3b41640b76c7f902fb4656d0b1c2598681/esphome/components/adc/adc_sensor.cpp#L59).
  # (x / 3.9) should be the adc measurement converted to Volts.
    filters:
      - lambda: return (x / 3.9) * 2 * 3.3 * 1.1;

##
## Deep Sleep - Example from: https://gist.github.com/tathamoddie
##

deep_sleep:
  id: deep_sleep_control
  sleep_duration: 30s

# Will only pick up a value if this device is configured in Home Assistant > Integrations
# If the device isn't configured, or Home Assistant is offline, it'll default to false

binary_sensor:
  - platform: homeassistant
    id: prevent_deep_sleep
    name: Prevent Deep Sleep
    entity_id: input_boolean.prevent_deep_sleep

script:
  - id: consider_deep_sleep
    mode: queued
    then:
      - delay: 10s
      - if:
          condition:
            binary_sensor.is_on: prevent_deep_sleep
          then:
            - logger.log: "Sleeping: No - per prevent_deep_sleep"
            - deep_sleep.prevent: deep_sleep_control
          else:
            - logger.log: "Sleeping: Yes - per prevent_deep_sleep"
            - deep_sleep.enter: deep_sleep_control
      - script.execute: consider_deep_sleep
