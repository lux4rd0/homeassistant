substitutions:
  devicename: esp13
esphome:
  name: ${devicename}
  platform: ESP32
  board: featheresp32
time:
  - platform: homeassistant
    id: esptime
logger:
  baud_rate: 0
switch:
  - platform: restart
    name: ${devicename} Restart
mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: true
api: null
ota:
  password: !secret ota_password
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: ${devicename}
    password: !secret wifi_password
  domain: .tylephony.com
  power_save_mode: none
captive_portal: null
web_server:
  port: 80

font:
  - file: "fonts/Ldfcomicsans-jj7l.ttf"
    id: font_cs
    size: 28
  - file: "fonts/ArialTh.ttf"
    id: font_arth
    size: 20
  - file: "fonts/Black Gladiator.ttf"
    id: font_black_gladiator
    size: 70
  - file: "fonts/planet benson 2.ttf"
    id: font_planet_benson_2
    size: 32
  - file: "fonts/Kayak Sans Regular.ttf"
    id: font_kayak_sans_regular
    size: 44
  - file: "fonts/SeasideResortNF.ttf"
    id: font_seaside_resort
    size: 94
  - file: "fonts/Adarsh-Sans-Regular.ttf"
    id: font_adarsh_sans_regular
    size: 44
  - file: "fonts/Adarsh-Sans-Italic.ttf"
    id: font_adarsh_sans_italic
    size: 44
  - file: "fonts/inglobal.regular.ttf"
    id: font_inglobal_regular
    size: 44
  - file: "fonts/inglobal.italic.ttf"
    id: font_inglobal_italic
    size: 44
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z', 'å', 'ä', 'ö', '/', '[', ']']



  - file: "fonts/Hyperjump Bold.ttf"
    id: font_hyperjump_bold
    size: 44
  - file: "fonts/Hyperjump Light Oblique.ttf"
    id: font_hyperjump_light_oblique
    size: 44
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z', 'å', 'ä', 'ö', '/', '[', ']', 'ī']




  - file: 'fonts/Google Sans Bold.ttf'
    id: clock_font
    size: 20
    glyphs: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, ':', A, M, P, ' ']

  - file: 'fonts/Google Sans Medium.ttf'
    id: temp_font
    size: 32
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z','å', 'ä', 'ö', '/']

  - file: 'fonts/Google Sans Bold.ttf'
    id: status_font
    size: 12
    glyphs:
      ['&', '@', '!', ',', '.', '"', '%', '(', ')', '+', '-', '_', ':', '°', '0',
       '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',
       'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',
       'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', 'a', 'b', 'c', 'd', 'e', 'f',
       'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',
       'u', 'v', 'w', 'x', 'y', 'z', 'å', 'ä', 'ö', '/']

  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: icon_font_small
    size: 22
    glyphs: [
      '󰌪', # mdi-leaf
    ]

  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: icon_font_new
    size: 32
    glyphs: [
      '󰽔', # mdi-home-thermometer
      '󰧿', # mdi-lighthouse
      '󰟑', # home-automation
      '󰂒',  # beach
      '󰓣', # swim
      "󰽕", # mdi-home-thermometer-outline
      '󰕊', # umbrella
      # Sun
      "󰖛", # mdi-weather-sunset-down
      "󰖜", # mdi-weather-sunset-up
    ]

  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: wifi_font
    size: 22
    glyphs: [
      # Wifi
      '󰤟', # mdi-wifi-strength-1
      '󰤢', # mdi-wifi-strength-2
      '󰤥', # mdi-wifi-strength-3
      '󰤨', # mdi-wifi-strength-4
      '󰤫', # mdi-wifi-strength-alert-outline
      ]

  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: weather_font
    size: 50
    glyphs: [
      # Weather
      "󰖙", # mdi-weather-sunny
      "󰖔", # mdi-weather-night
      "󰖐", # mdi-weather-cloudy
      "󰖖", # mdi-weather-pouring
      "󰼵", # mdi-weather-snowy-rainy
      "󰼴", # mdi-weather-snowy-heavy
      "󰖞", # mdi-weather-windy-variant
      "󰖑", # mdi-weather-fog
      "󰼱", # mdi-weather-night-partly-cloudy
      "󰖕", # mdi-weather-partly-cloudy
    ]

  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: moon_font
    size: 50
    glyphs: [
      # Moon
      "󰽡", # first_quarter
      "󰽢", # full_moon
      "󰽣", # last_quarter
      "󰽤", # new_moon
      "󰽥", # waning_crescent
      "󰽦", # waning_gibbous
      "󰽧", # waxing_crescent
      "󰽨", # waxing_gibbous
      ]

  - file: 'fonts/materialdesignicons-webfont.ttf' 
    id: battery_font
    size: 22
    glyphs: [
      # Battery
      '󰁹', # mdi-battery
      '󰂁', # mdi-battery-80
      '󰁿', # mdi-battery-60
      '󰁽', # mdi-battery-40
      '󰁻', # mdi-battery-20
      '󱃍', # mdi-battery-alert-variant-outline
      ]

  - file: 'fonts/digital-7.ttf' 
    id: lcd_font
    size: 32

  - file: 'fonts/Montserrat-Medium.ttf' 
    id: font_montserrat_medium
    size: 40

  - file: 'fonts/CrimsonText-Semibold.ttf' 
    id: font_crimsonText_semibold
    size: 40

  - file: 'fonts/Oswald-Medium.ttf' 
    id: font_oswald_medium
    size: 40

  - file: 'fonts/Kalam-Regular.ttf' 
    id: font_kalam_regular_80
    size: 80

  - file: 'fonts/Kalam-Regular.ttf' 
    id: font_kalam_regular_30
    size: 30

  - file: 'fonts/Kalam-Regular.ttf' 
    id: font_kalam_regular_20
    size: 20

  - file: 'fonts/Quicksand-Regular.ttf' 
    id: font_quicksand_regular_20
    size: 20

  - file: 'fonts/futura light bt.ttf' 
    id: font_futura_light_bt_20
    size: 20
    
  - file: 'fonts/Rebeqa-Thin.ttf' 
    id: font_rebeqa_thin_30
    size: 30

  - file: 'fonts/Ignotum.ttf' 
    id: font_ignotum_20
    size: 20

  - file: 'fonts/Tall Films Expanded.ttf' 
    id: font_tall_films_expanded_24
    size: 24

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15
display:
  - platform: waveshare_epaper
    id: ${devicename}_epaper
    cs_pin: GPIO12
    busy_pin: GPIO33
    reset_pin: GPIO21
    dc_pin: GPIO27
    model: 7.50inV2
    update_interval: 300s
    reset_duration: 2ms
    pages:
      - id: page1

        lambda: |-

            int x, y, c;
            ESP_LOGI("display", "Updating..");

            // Print time in HH:MM format
            it.strftime(0, 482, id(status_font), TextAlign::BOTTOM_LEFT, "%I:%M %p", id(esptime).now());

            // previous font - font_ignotum_20

            it.print(66, 10, id(font_tall_films_expanded_24), TextAlign::CENTER, "Bedroom Dave");
            it.print(66, 30, id(font_tall_films_expanded_24), TextAlign::CENTER, "Bathroom");

            it.print(200, 10, id(font_tall_films_expanded_24), TextAlign::CENTER, "Bedroom Red");
            it.print(200, 30, id(font_tall_films_expanded_24), TextAlign::CENTER, "Bathroom");

            it.print(333, 10, id(font_tall_films_expanded_24), TextAlign::CENTER, "Hallway");
            it.print(333, 30, id(font_tall_films_expanded_24), TextAlign::CENTER, "Bathroom");

            it.print(466, 10, id(font_tall_films_expanded_24), TextAlign::CENTER, "Tyle 1st Floor");
            it.print(466, 30, id(font_tall_films_expanded_24), TextAlign::CENTER, "Thermostat");

            it.print(600, 10, id(font_tall_films_expanded_24), TextAlign::CENTER, "Tyle 2nd Floor");
            it.print(600, 30, id(font_tall_films_expanded_24), TextAlign::CENTER, "Thermostat");

            it.print(734, 20, id(font_tall_films_expanded_24), TextAlign::CENTER, "Outside");



            it.printf(66, 80, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(bedroom_dave_bathroom_humidity_temperature).state);
            it.printf(200, 80, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(bedroom_red_bathroom_humidity_temperature).state);
            it.printf(333, 80, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(hallway_bathroom_motion_temperature).state);
            
            it.printf(66, 120, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(bedroom_dave_bathroom_humidity_humidity).state);
            it.printf(200, 120, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(bedroom_red_bathroom_humidity_humidity).state);
            it.printf(333, 120, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(hallway_bathroom_humidity_humidity).state);


            it.printf(466, 80, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(tyle_1st_floor_thermostat_temperature).state);
            it.printf(600, 80, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(tyle_2nd_floor_thermostat_temperature).state);
            it.printf(734, 80, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(outside_humidity_temperature).state);
            
            it.printf(466, 120, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(tyle_1st_floor_thermostat_humidity).state);
            it.printf(600, 120, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(tyle_2nd_floor_thermostat_humidity).state);
            it.printf(734, 120, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(outside_humidity_humidity).state);



            it.print(66, 170, id(font_tall_films_expanded_24), TextAlign::CENTER, "ESP01");
            it.print(200, 170, id(font_tall_films_expanded_24), TextAlign::CENTER, "ESP02");
            it.print(333, 170, id(font_tall_films_expanded_24), TextAlign::CENTER, "ESP03");
            it.print(466, 170, id(font_tall_films_expanded_24), TextAlign::CENTER, "ESP06");
            it.print(600, 170, id(font_tall_films_expanded_24), TextAlign::CENTER, "ESP08");



            it.printf(66, 230, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(esp01_temperature).state);
            it.printf(200, 230, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(esp02_temperature).state);
            it.printf(333, 230, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(esp03_temperature).state);
            
            it.printf(66, 270, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(esp01_humidity).state);
            it.printf(200, 270, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(esp02_humidity).state);
            it.printf(333, 270, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(esp03_humidity).state);


            it.printf(466, 230, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(esp06_temperature).state);
            it.printf(600, 230, id(font_kalam_regular_80), TextAlign::CENTER, "%.0f°", id(esp08_temperature).state);
            
            it.printf(466, 270, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(esp06_humidity).state);
            it.printf(600, 270, id(font_kalam_regular_30), TextAlign::CENTER, "%.0f%%", id(esp08_humidity).state);


            // WiFi Signal Strength
            if(id(${devicename}_WiFi_Signal).has_state()) {
              x = 798, y = 478;
              if (id(${devicename}_WiFi_Signal).state >= -50) {
                        //Excellent
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤨");
                        ESP_LOGI("WiFi", "Exellent");
              } else if (id(${devicename}_WiFi_Signal).state  >= -60) {
                        //Good
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤥");
                        ESP_LOGI("WiFi", "Good");
              } else if (id(${devicename}_WiFi_Signal).state  >= -67) {
                        //Fair
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤢");
                        ESP_LOGI("WiFi", "Fair");
              } else if (id(${devicename}_WiFi_Signal).state  >= -70) {
                        //Weak
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤟");
                        ESP_LOGI("WiFi", "Weak");
              } else {
                        //Unlikely working signal
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤫");
                        ESP_LOGI("WiFi", "Unlikely");
              }
            }

            // Voltage
            if(id(${devicename}_battery_voltage).has_state()) {
              x = 798, y = 453;

              if (id(${devicename}_battery_voltage).state >= 3.7) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁹");
              } else if (id(${devicename}_battery_voltage).state >= 3.5) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰂁");
              } else if (id(${devicename}_battery_voltage).state >= 3.3) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁿");
              } else if (id(${devicename}_battery_voltage).state >= 3.1) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁽");
              } else if (id(${devicename}_battery_voltage).state >= 3.0) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁻");
              } else {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󱃍");
              }

              // x = 35, y = 280;
              // it.printf(x, y, id(status_font), TextAlign::BOTTOM_LEFT, "%.2f V", id(${devicename}_battery_voltage).state);
              }

      - id: page2

        lambda: |-

            int x, y, c;
            ESP_LOGI("display", "Updating..");

            // Print time in HH:MM format
            it.strftime(0, 482, id(status_font), TextAlign::BOTTOM_LEFT, "%I:%M %p", id(esptime).now());

            // it.printf(200, 80, id(font_montserrat_medium), TextAlign::CENTER, "Forecast: %s", id(weatherflow_day_based_forecast).state.c_str());

            it.printf(400, 44, id(font_seaside_resort), TextAlign::CENTER, "Now Playing");

            it.printf(140, 150, id(font_hyperjump_bold), TextAlign::BOTTOM_RIGHT, "Artist:");
            it.printf(140, 200, id(font_hyperjump_bold), TextAlign::BOTTOM_RIGHT, "Title:");
            it.printf(140, 250, id(font_hyperjump_bold), TextAlign::BOTTOM_RIGHT, "Album:");
            it.printf(140, 300, id(font_hyperjump_bold), TextAlign::BOTTOM_RIGHT, "Playlist:");


            it.printf(145, 150, id(font_hyperjump_light_oblique), TextAlign::BOTTOM_LEFT, "%s", id(sonos_office_media_artist).state.c_str());
            it.printf(145, 200, id(font_hyperjump_light_oblique), TextAlign::BOTTOM_LEFT, "%s", id(sonos_office_media_title).state.c_str());
            it.printf(145, 250, id(font_hyperjump_light_oblique), TextAlign::BOTTOM_LEFT, "%s", id(sonos_office_media_album_name).state.c_str());
            it.printf(145, 300, id(font_hyperjump_light_oblique), TextAlign::BOTTOM_LEFT, "%s", id(sonos_office_media_playlist).state.c_str());


            // WiFi Signal Strength
            if(id(${devicename}_WiFi_Signal).has_state()) {
              x = 798, y = 478;
              if (id(${devicename}_WiFi_Signal).state >= -50) {
                        //Excellent
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤨");
                        ESP_LOGI("WiFi", "Exellent");
              } else if (id(${devicename}_WiFi_Signal).state  >= -60) {
                        //Good
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤥");
                        ESP_LOGI("WiFi", "Good");
              } else if (id(${devicename}_WiFi_Signal).state  >= -67) {
                        //Fair
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤢");
                        ESP_LOGI("WiFi", "Fair");
              } else if (id(${devicename}_WiFi_Signal).state  >= -70) {
                        //Weak
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤟");
                        ESP_LOGI("WiFi", "Weak");
              } else {
                        //Unlikely working signal
                        it.print(x, y, id(wifi_font), TextAlign::BOTTOM_RIGHT, "󰤫");
                        ESP_LOGI("WiFi", "Unlikely");
              }
            }

            // Voltage
            if(id(${devicename}_battery_voltage).has_state()) {
              x = 798, y = 453;

              if (id(${devicename}_battery_voltage).state >= 3.7) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁹");
              } else if (id(${devicename}_battery_voltage).state >= 3.5) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰂁");
              } else if (id(${devicename}_battery_voltage).state >= 3.3) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁿");
              } else if (id(${devicename}_battery_voltage).state >= 3.1) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁽");
              } else if (id(${devicename}_battery_voltage).state >= 3.0) {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󰁻");
              } else {
              it.print(x, y, id(battery_font), TextAlign::BOTTOM_RIGHT, "󱃍");
              }

              // x = 35, y = 280;
              // it.printf(x, y, id(status_font), TextAlign::BOTTOM_LEFT, "%.2f V", id(${devicename}_battery_voltage).state);
              }

interval:
  - interval: 30s
    then:
      - display.page.show_next: '${devicename}_epaper'
      - component.update: '${devicename}_epaper'
sensor:
  - platform: wifi_signal
    name: ${devicename} WiFi Signal
    id: ${devicename}_WiFi_Signal
    update_interval: 60s
  - platform: uptime
    name: ${devicename} Uptime
    update_interval: 60s
  - platform: homeassistant
    entity_id: sensor.bedroom_dave_bathroom_humidity_humidity
    id: bedroom_dave_bathroom_humidity_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.bedroom_red_bathroom_humidity_humidity
    id: bedroom_red_bathroom_humidity_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.hallway_bathroom_humidity_humidity
    id: hallway_bathroom_humidity_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.outside_humidity_humidity
    id: outside_humidity_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.tyle_1st_floor_thermostat_humidity
    id: tyle_1st_floor_thermostat_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.tyle_2nd_floor_thermostat_humidity
    id: tyle_2nd_floor_thermostat_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp01_humidity
    id: esp01_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp02_humidity
    id: esp02_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp03_humidity
    id: esp03_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp06_humidity
    id: esp06_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp08_humidity
    id: esp08_humidity
    internal: true
  - platform: homeassistant
    entity_id: sensor.bedroom_dave_bathroom_humidity_temperature
    id: bedroom_dave_bathroom_humidity_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.bedroom_red_bathroom_humidity_temperature
    id: bedroom_red_bathroom_humidity_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.hallway_bathroom_motion_temperature
    id: hallway_bathroom_motion_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.outside_humidity_temperature
    id: outside_humidity_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.tyle_1st_floor_thermostat_temperature
    id: tyle_1st_floor_thermostat_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.tyle_2nd_floor_thermostat_temperature
    id: tyle_2nd_floor_thermostat_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp01_temperature
    id: esp01_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp02_temperature
    id: esp02_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp03_temperature
    id: esp03_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp06_temperature
    id: esp06_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.esp08_temperature
    id: esp08_temperature
    internal: true
  - platform: homeassistant
    entity_id: sensor.garage_door_tilt_temperature
    id: garage_door_tilt_temperature
    internal: true
  - platform: adc
    pin: A13
    name: ${devicename} Battery Voltage
    id: ${devicename}_battery_voltage
    update_interval: 15s
    attenuation: 11db
    filters:
      - lambda: return (x / 3.9) * 2 * 3.3 * 1.1;
text_sensor:
  - platform: homeassistant
    entity_id: weather.weatherflow_day_based_forecast
    id: weatherflow_day_based_forecast
    internal: true
  - platform: homeassistant
    id: sonos_office_media_artist
    entity_id: media_player.sonos_office
    attribute: media_artist
    internal: true
  - platform: homeassistant
    id: sonos_office_media_title
    entity_id: media_player.sonos_office
    attribute: media_title
    internal: true
  - platform: homeassistant
    id: sonos_office_media_album_name
    entity_id: media_player.sonos_office
    attribute: media_album_name
    internal: true
  - platform: homeassistant
    id: sonos_office_media_playlist
    entity_id: media_player.sonos_office
    attribute: media_playlist
    internal: true
