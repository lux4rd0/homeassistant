substitutions:
  devicename: esp21
  run_time: 2min
  sleep_time: 15min
  night_sleep_time: 6h
esphome:
  name: ${devicename}
  platformio_options:
    build_flags: 
      - -DCONFIG_ARDUINO_LOOP_STACK_SIZE=49152
esp32:
#  board: esp32dev
  board: m5stack-core2
  variant: esp32
  framework:
    type: arduino
    version: 2.0.2
    source: https://github.com/espressif/arduino-esp32.git#2.0.2
    platform_version: https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
debug:
  update_interval: 60s
time:
  - platform: homeassistant
    id: ntp
logger:
  baud_rate: 0
  level: DEBUG
switch:
  - platform: restart
    name: '${devicename} Restart'
api:
  reboot_timeout: 2min
ota:
  password: !secret ota_password
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: '${devicename}'
    password: !secret wifi_password
  domain: .tylephony.com
  power_save_mode: none
deep_sleep:
  run_duration: '${run_time}'
  sleep_duration: '${sleep_time}'
  id: deep_sleep_control
  esp32_ext1_wakeup:
    pins: GPIO39
    mode: ALL_LOW
font:
  - file: fonts/dripicons-weather.ttf
    id: font_icons_large
    size: 210
    glyphs:
      - /
      - ''''
      - a
      - k
      - R
      - A
      - E
      - D
      - '"'
      - t
      - P
      - O
      - 'y'
      - x
      - b
      - '%'
      - .
      - w
      - j
  - file: fonts/dripicons-weather.ttf
    id: font_icons_small
    glyphs:
      - /
      - ''''
      - a
      - k
      - R
      - A
      - E
      - D
      - '"'
      - t
      - P
      - O
      - 'y'
      - x
      - b
      - '%'
      - .
      - w
      - j
    size: 38
  - file: fonts/materialdesignicons-webfont.ttf
    id: font_battery
    size: 32
    glyphs:
      - "\U000F0079"
      - "\U000F0081"
      - "\U000F007F"
      - "\U000F007D"
      - "\U000F007B"
      - "\U000F10CD"
  - file: fonts/materialdesignicons-webfont.ttf
    id: font_wifi
    size: 32
    glyphs:
      - "\U000F091F"
      - "\U000F0922"
      - "\U000F0925"
      - "\U000F0928"
      - "\U000F092B"
  - file: fonts/Calama.ttf
    id: font_room_name
    size: 40
  - file: fonts/Courier Prime Sans.ttf
    id: font_hi_lo
    glyphs:
      - h
      - i
      - l
      - o
    size: 30
  - file: fonts/digital-7 (mono).ttf
    id: font_humidity
    glyphs:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - '%'
      - ' '
    size: 64
  - file: fonts/digital-7 (mono).ttf
    id: font_current
    glyphs:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - '%'
      - ' '
    size: 82
  - file: 'gfonts://Alef'
    id: font_humidity_percent
    glyphs:
      - '%'
    size: 36
  - file: 'gfonts://Alef'
    id: font_current_humidity_percent
    glyphs:
      - '%'
    size: 40
  - file: fonts/digital-7 (mono).ttf
    id: font_temperature
    glyphs:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    size: 136
  - file: 'gfonts://Alef'
    id: font_temperature_degree
    size: 80
    glyphs:
      - °
  - file: 'gfonts://Alef'
    id: font_hourly_degree
    size: 30
    glyphs:
      - °
  - file: 'gfonts://Alef'
    id: font_current_degree
    size: 70
    glyphs:
      - °
  - file: fonts/digital-7 (mono).ttf
    id: font_hourly
    size: 30
  - file: fonts/Calama.ttf
    id: font_am_pm
    size: 40
  - file: fonts/pie4map.ttf
    id: font_pie
    size: 32
  - file: fonts/Calama.ttf
    id: font_last_updated
    size: 46
  - file: fonts/materialdesignicons-webfont.ttf
    id: font_clock
    size: 34
    glyphs:
      - "\U000F144B"
      - "\U000F144C"
      - "\U000F144D"
      - "\U000F144E"
      - "\U000F144F"
      - "\U000F1450"
      - "\U000F1451"
      - "\U000F1452"
      - "\U000F1453"
      - "\U000F1454"
      - "\U000F1455"
      - "\U000F1456"
      - "\U000F143F"
      - "\U000F1440"
      - "\U000F1441"
      - "\U000F1442"
      - "\U000F1443"
      - "\U000F1444"
      - "\U000F1445"
      - "\U000F1446"
      - "\U000F1447"
      - "\U000F1448"
      - "\U000F1449"
      - "\U000F144A"
button:
  - platform: restart
    name: '${devicename} Restart'
    internal: false
  - platform: template
    name: '${devicename} Refresh'
    icon: 'mdi:update'
    on_press:
      then:
        - component.update: '${devicename}_display'
    internal: false
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO39
      inverted: true
    name: '${devicename} Button 1'
    on_press:
      then:
        - component.update: '${devicename}_display'
  - platform: gpio
    pin:
      number: GPIO34
      inverted: true
    name: '${devicename} Button 2'
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    name: '${devicename} Button 3'
  - platform: homeassistant
    id: '${devicename}_prevent_deep_sleep'
    name: '${devicename} Prevent Deep Sleep'
    entity_id: 'input_boolean.${devicename}_prevent_deep_sleep'
external_components:
  - source: 'github://ashald/esphome@lilygo-t5-47'
    components:
      - lilygo_t5_47
display:
  platform: lilygo_t5_47
  full_update_every: 1
  cycles_render: 40
  cycles_invert: 40
  id: '${devicename}_display'
  update_interval: never


  lambda: |-


      if (id(${devicename}_page).state == "A") {



      //it.printf(960, 80, id(font_last_updated), TextAlign::TOP_RIGHT, "Page: %s", id(${devicename}_page).state.c_str());



      // Last Updated
      it.strftime(955, 5, id(font_last_updated), TextAlign::TOP_RIGHT, "%I:%M %p", id(ntp).now());
      
      #define wifi_x 925
      #define wifi_y 40
      
      // WiFi Signal Strength
      
      if (id(${devicename}_WiFi_Signal).has_state()) {
        if (id(${devicename}_WiFi_Signal).state >= -50) {
          //Excellent
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_RIGHT, "󰤨");
          ESP_LOGI("WiFi", "Exellent");
        } else if (id(${devicename}_WiFi_Signal).state >= -60) {
          //Good
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_RIGHT, "󰤥");
          ESP_LOGI("WiFi", "Good");
        } else if (id(${devicename}_WiFi_Signal).state >= -67) {
          //Fair
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_RIGHT, "󰤢");
          ESP_LOGI("WiFi", "Fair");
        } else if (id(${devicename}_WiFi_Signal).state >= -70) {
          //Weak
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_RIGHT, "󰤟");
          ESP_LOGI("WiFi", "Weak");
        } else {
          //Unlikely working signal
          it.print(wifi_x, wifi_y, id(font_wifi), TextAlign::TOP_RIGHT, "󰤫");
          ESP_LOGI("WiFi", "Unlikely");
        }
      }

      #define battery_voltage_x 955
      #define battery_voltage_y 40

      // Battery Voltage
      
      if (id(${devicename}_battery_voltage).has_state()) {
        if (id(${devicename}_battery_voltage).state >= 3.7) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_RIGHT, "󰁹");
        } else if (id(${devicename}_battery_voltage).state >= 3.5) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_RIGHT, "󰂁");
        } else if (id(${devicename}_battery_voltage).state >= 3.3) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_RIGHT, "󰁿");
        } else if (id(${devicename}_battery_voltage).state >= 3.1) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_RIGHT, "󰁽");
        } else if (id(${devicename}_battery_voltage).state >= 3.0) {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_RIGHT, "󰁻");
        } else {
          it.print(battery_voltage_x, battery_voltage_y, id(font_battery), TextAlign::TOP_RIGHT, "󱃍");
        }

      }

        // Rooms

        #define room_x_pad 151
        #define room_y_pad 182

        #define room_name_x_center 220
        #define room_name_y 0

        #define room_temp_x_center 220
        #define room_temp_y 25

        #define room_temp_degree_x_center 294
        #define room_temp_degree_y 10

        #define room_humidity_x_center 220
        #define room_humidity_y 123

        #define room_humidity_percent_x_center 260
        #define room_humidity_percent_y 116

        it.print(room_name_x_center - room_x_pad, room_name_y, id(font_room_name), TextAlign::TOP_CENTER, "MAIN BEDROOM");
        it.print(room_name_x_center, room_name_y, id(font_room_name), TextAlign::TOP_CENTER, "BEDROOM 1");
        it.print(room_name_x_center + room_x_pad, room_name_y, id(font_room_name), TextAlign::TOP_CENTER, "BEDROOM 2");

        it.printf(room_temp_x_center - room_x_pad, room_temp_y, id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(bedroom_dave_bathroom_humidity_temperature).state);
        it.printf(room_temp_x_center, room_temp_y, id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(bedroom_red_bathroom_humidity_temperature).state);
        it.printf(room_temp_x_center + room_x_pad, room_temp_y, id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(hallway_bathroom_motion_temperature).state);

        it.printf(room_temp_degree_x_center - room_x_pad, room_temp_degree_y, id(font_temperature_degree), TextAlign::TOP_CENTER, "°");
        it.printf(room_temp_degree_x_center, room_temp_degree_y, id(font_temperature_degree), TextAlign::TOP_CENTER, "°");
        it.printf(room_temp_degree_x_center + room_x_pad, room_temp_degree_y, id(font_temperature_degree), TextAlign::TOP_CENTER, "°");

        it.printf(room_humidity_x_center - room_x_pad, room_humidity_y, id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(bedroom_dave_bathroom_humidity_humidity).state);
        it.printf(room_humidity_x_center, room_humidity_y, id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(bedroom_red_bathroom_humidity_humidity).state);
        it.printf(room_humidity_x_center + room_x_pad, room_humidity_y, id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(hallway_bathroom_humidity_humidity).state);

        it.printf(room_humidity_percent_x_center - room_x_pad, room_humidity_percent_y, id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");
        it.printf(room_humidity_percent_x_center, room_humidity_percent_y, id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");
        it.printf(room_humidity_percent_x_center + room_x_pad, room_humidity_percent_y, id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");

        it.line(0, 178, 465, 178);

        it.print(room_name_x_center - room_x_pad, room_name_y + (room_y_pad * 1), id(font_room_name), TextAlign::TOP_CENTER, "FAMILY ROOM");
        it.print(room_name_x_center, room_name_y + (room_y_pad * 1), id(font_room_name), TextAlign::TOP_CENTER, "SUNROOM");
        it.print(room_name_x_center + room_x_pad, room_name_y + (room_y_pad * 1), id(font_room_name), TextAlign::TOP_CENTER, "LOFT");

        it.printf(room_temp_x_center - room_x_pad, room_temp_y + (room_y_pad * 1), id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(esp01_temperature).state);
        it.printf(room_temp_x_center, room_temp_y + (room_y_pad * 1), id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(esp08_temperature).state);
        it.printf(room_temp_x_center + room_x_pad, room_temp_y + (room_y_pad * 1), id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(esp03_temperature).state);

        it.printf(room_temp_degree_x_center - room_x_pad, room_temp_degree_y + (room_y_pad * 1), id(font_temperature_degree), TextAlign::TOP_CENTER, "°");
        it.printf(room_temp_degree_x_center, room_temp_degree_y + (room_y_pad * 1), id(font_temperature_degree), TextAlign::TOP_CENTER, "°");
        it.printf(room_temp_degree_x_center + room_x_pad, room_temp_degree_y + (room_y_pad * 1), id(font_temperature_degree), TextAlign::TOP_CENTER, "°");

        it.printf(room_humidity_x_center - room_x_pad, room_humidity_y + (room_y_pad * 1), id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(esp01_humidity).state);
        it.printf(room_humidity_x_center, room_humidity_y + (room_y_pad * 1), id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(esp08_humidity).state);
        it.printf(room_humidity_x_center + room_x_pad, room_humidity_y + (room_y_pad * 1), id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(esp03_humidity).state);

        it.printf(room_humidity_percent_x_center - room_x_pad, room_humidity_percent_y + (room_y_pad * 1), id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");
        it.printf(room_humidity_percent_x_center, room_humidity_percent_y + (room_y_pad * 1), id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");
        it.printf(room_humidity_percent_x_center + room_x_pad, room_humidity_percent_y + (room_y_pad * 1), id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");

        it.line(0, 178 + room_y_pad, 465, 178 + room_y_pad);

        it.print(room_name_x_center - room_x_pad, room_name_y + (room_y_pad * 2), id(font_room_name), TextAlign::TOP_CENTER, "KITCHEN");
        it.print(room_name_x_center, room_name_y + (room_y_pad * 2), id(font_room_name), TextAlign::TOP_CENTER, "BARN");
        it.print(room_name_x_center + room_x_pad, room_name_y + (room_y_pad * 2), id(font_room_name), TextAlign::TOP_CENTER, "SHE SHED");

        it.printf(room_temp_x_center - room_x_pad, room_temp_y + (room_y_pad * 2), id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(tyle_1st_floor_thermostat_temperature).state);
        it.printf(room_temp_x_center, room_temp_y + (room_y_pad * 2), id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(tyle_2nd_floor_thermostat_temperature).state);
        it.printf(room_temp_x_center + room_x_pad, room_temp_y + (room_y_pad * 2), id(font_temperature), TextAlign::TOP_CENTER, "%.0f", id(weatherflow_air_temperature).state);

        it.printf(room_temp_degree_x_center - room_x_pad, room_temp_degree_y + (room_y_pad * 2), id(font_temperature_degree), TextAlign::TOP_CENTER, "°");
        it.printf(room_temp_degree_x_center, room_temp_degree_y + (room_y_pad * 2), id(font_temperature_degree), TextAlign::TOP_CENTER, "°");
        it.printf(room_temp_degree_x_center + room_x_pad, room_temp_degree_y + (room_y_pad * 2), id(font_temperature_degree), TextAlign::TOP_CENTER, "°");

        it.printf(room_humidity_x_center - room_x_pad, room_humidity_y + (room_y_pad * 2), id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(tyle_1st_floor_thermostat_humidity).state);
        it.printf(room_humidity_x_center, room_humidity_y + (room_y_pad * 2), id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(tyle_2nd_floor_thermostat_humidity).state);
        it.printf(room_humidity_x_center + room_x_pad, room_humidity_y + (room_y_pad * 2), id(font_humidity), TextAlign::TOP_CENTER, "%.0f", id(weatherflow_relative_humidity).state);

        it.printf(room_humidity_percent_x_center - room_x_pad, room_humidity_percent_y + (room_y_pad * 2), id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");
        it.printf(room_humidity_percent_x_center, room_humidity_percent_y + (room_y_pad * 2), id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");
        it.printf(room_humidity_percent_x_center + room_x_pad, room_humidity_percent_y + (room_y_pad * 2), id(font_humidity_percent), TextAlign::TOP_CENTER, "%%");

        it.line(465, 0, 465, 540);

        // Current Weather

        #define forecast_tab_x_0 127

        #define large_weather_icon_x_0 712
        #define large_weather_icon_y_0 0

        #define forecast_header_y_0 213

        #define forecast_x_0 520
        #define forecast_state_y_0 243
        
        #define forecast_degree_x_0 567
        #define forecast_degree_y_0 226
        
        #define forecast_percent_x_0 566
        #define forecast_percent_y_0 236
        


        if (id(wf_current_conditions_icon).has_state()) {
          it.printf(large_weather_icon_x_0, large_weather_icon_y_0, id(font_icons_large), TextAlign::TOP_CENTER, id(wf_current_conditions_icon).state.c_str());
        }

        it.printf(forecast_x_0, forecast_header_y_0, id(font_am_pm), TextAlign::TOP_CENTER, "CURRENTLY");

        if (id(wf_current_conditions_air_temperature).state >= 100) {
          it.printf(forecast_x_0 - 21, forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_current_conditions_air_temperature).state);
        } else {
          it.printf(forecast_x_0, forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_current_conditions_air_temperature).state);
        }
        it.printf(forecast_degree_x_0, forecast_degree_y_0, id(font_current_degree), TextAlign::TOP_CENTER, "°");

        it.printf(forecast_x_0 + (forecast_tab_x_0 * 1), forecast_header_y_0, id(font_am_pm), TextAlign::TOP_CENTER, "HIGH");

        if (id(wf_d_fc_0_air_temp_high).state >= 100) {
          it.printf(forecast_x_0 + (forecast_tab_x_0 * 1) - 21, forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_d_fc_0_air_temp_high).state);
        } else {
          it.printf(forecast_x_0 + (forecast_tab_x_0 * 1), forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_d_fc_0_air_temp_high).state);
        }
        it.printf(forecast_degree_x_0 + (forecast_tab_x_0 * 1), forecast_degree_y_0, id(font_current_degree), TextAlign::TOP_CENTER, "°");

        it.printf(forecast_x_0 + (forecast_tab_x_0 * 2), forecast_header_y_0, id(font_am_pm), TextAlign::TOP_CENTER, "LOW");
        it.printf(forecast_x_0 + (forecast_tab_x_0 * 2), forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_d_fc_0_air_temp_low).state);
        it.printf(forecast_degree_x_0 + (forecast_tab_x_0 * 2), forecast_degree_y_0, id(font_current_degree), TextAlign::TOP_CENTER, "°");

        it.printf(forecast_x_0 + (forecast_tab_x_0 * 3), forecast_header_y_0, id(font_am_pm), TextAlign::TOP_CENTER, "CHANCE");

        if (id(wf_d_fc_0_precip_probability).state == 100) {
          it.printf(forecast_x_0 + (forecast_tab_x_0 * 3) - 21, forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_d_fc_0_precip_probability).state);
        } else if (id(wf_d_fc_0_precip_probability).state == 0) {
          it.printf(forecast_x_0 + (forecast_tab_x_0 * 3), forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, " 0");
        } else if (id(wf_d_fc_0_precip_probability).state == 5) {
          it.printf(forecast_x_0 + (forecast_tab_x_0 * 3), forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, " 5");
        } else {
          it.printf(forecast_x_0 + (forecast_tab_x_0 * 3), forecast_state_y_0, id(font_current), TextAlign::TOP_CENTER, "%.0f", id(wf_d_fc_0_precip_probability).state);
        }

        it.printf(forecast_percent_x_0 + (forecast_tab_x_0 * 3), forecast_percent_y_0, id(font_current_humidity_percent), TextAlign::TOP_CENTER, "%%");





        // Weather Forecast Day +1

        #define small_weather_icon_x_1 587
        #define small_weather_icon_y_1 384

        #define forecast_center_x_1 587
        #define forecast_center_degree_x_1 621
        #define forecast_center_percent_x_1 627

        #define forecast_tab_x_1 80
        #define forecast_tab_x_1_adjust 8

        #define forecast_header_y 458
        #define forecast_state_y 487
        #define forecast_degree_y 479
        #define forecast_percent_y 482

 

        it.line(465, 309, 960, 309);







        // Hourly Details

        #define hourly_column 20

        #define hourly_hour_x 492
        #define hourly_hour_y 465



        #define hourly_temperature_y 399
        #define hourly_degree_x 510
        #define hourly_degree_y 416

        #define small_weather_icon_x 492
        #define small_weather_icon_y 463

        #define hourly_precip_prob_x 492
        #define hourly_precip_prob_y 534


        #define hourly_line_x 492
        #define hourly_line_y 441
        #define hourly_line_pad_y 18
        #define hourly_line_top_wide_x 6
        #define hourly_line_top_narrow_x 6
        



        //it.printf(hourly_hour_x, hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "󱑖󱑋󱑌󱑍󱑎󱑏󱑐󱑑󱑒󱑓󱑔󱑕󱑊󱐿󱑀󱑁󱑂󱑃󱑄󱑅󱑆󱑇󱑈󱑉");
        //it.printf(hourly_hour_x, hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "󱑖󱑋󱑌󱑍󱑎󱑏󱑐󱑑󱑒󱑓󱑔󱑕");

        it.printf(hourly_hour_x, hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_0_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x, hourly_temperature_y - (id(wf_h_fc_0_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_0_air_temperature).state);
        it.printf(hourly_degree_x, hourly_degree_y - (id(wf_h_fc_0_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_0_icon).has_state()) {
          it.printf(small_weather_icon_x, small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_0_icon).state.c_str());
        }

        if (id(wf_h_fc_0_pixel_height).has_state()) {
          //it.line(hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65), hourly_line_x, hourly_line_y);
          //it.line(hourly_line_x - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65), hourly_line_x + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x, hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_0_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_1_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65), hourly_line_x + (hourly_column * 1), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 1) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65), hourly_line_x + (hourly_column * 1) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65));
        }








        it.printf(hourly_hour_x + (hourly_column * 2), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_2_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 2), hourly_temperature_y - (id(wf_h_fc_2_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_2_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 2), hourly_degree_y - (id(wf_h_fc_2_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_2_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 2), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_2_icon).state.c_str());
        }

        if (id(wf_h_fc_2_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65), hourly_line_x + (hourly_column * 2), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 2) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65), hourly_line_x + (hourly_column * 2) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 2), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_2_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_3_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65), hourly_line_x + (hourly_column * 3), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 3) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65), hourly_line_x + (hourly_column * 3) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 4), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_4_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 4), hourly_temperature_y - (id(wf_h_fc_4_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_4_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 4), hourly_degree_y - (id(wf_h_fc_4_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_4_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 4), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_4_icon).state.c_str());
        }

        if (id(wf_h_fc_4_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65), hourly_line_x + (hourly_column * 4), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 4) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65), hourly_line_x + (hourly_column * 4) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 4), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_4_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_5_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65), hourly_line_x + (hourly_column * 5), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 5) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65), hourly_line_x + (hourly_column * 5) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 6), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_6_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 6), hourly_temperature_y - (id(wf_h_fc_6_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_6_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 6), hourly_degree_y - (id(wf_h_fc_6_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_6_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 6), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_6_icon).state.c_str());
        }

        if (id(wf_h_fc_6_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65), hourly_line_x + (hourly_column * 6), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 6) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65), hourly_line_x + (hourly_column * 6) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 6), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_6_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_7_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65), hourly_line_x + (hourly_column * 7), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 7) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65), hourly_line_x + (hourly_column * 7) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65));
        }


        it.printf(hourly_hour_x + (hourly_column * 8), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_8_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 8), hourly_temperature_y - (id(wf_h_fc_8_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_8_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 8), hourly_degree_y - (id(wf_h_fc_8_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_8_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 8), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_8_icon).state.c_str());
        }

        if (id(wf_h_fc_8_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65), hourly_line_x + (hourly_column * 8), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 8) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65), hourly_line_x + (hourly_column * 8) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 8), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_8_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_9_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65), hourly_line_x + (hourly_column * 9), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 9) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65), hourly_line_x + (hourly_column * 9) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 10), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_10_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 10), hourly_temperature_y - (id(wf_h_fc_10_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_10_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 10), hourly_degree_y - (id(wf_h_fc_10_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_10_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 10), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_10_icon).state.c_str());
        }

        if (id(wf_h_fc_10_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65), hourly_line_x + (hourly_column * 10), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 10) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65), hourly_line_x + (hourly_column * 10) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 10), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_10_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_11_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65), hourly_line_x + (hourly_column * 11), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 11) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65), hourly_line_x + (hourly_column * 11) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 12), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_12_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 12), hourly_temperature_y - (id(wf_h_fc_12_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_12_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 12), hourly_degree_y - (id(wf_h_fc_12_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_12_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 12), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_12_icon).state.c_str());
        }

        if (id(wf_h_fc_12_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65), hourly_line_x + (hourly_column * 12), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 12) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65), hourly_line_x + (hourly_column * 12) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 12), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_12_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_13_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65), hourly_line_x + (hourly_column * 13), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 13) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65), hourly_line_x + (hourly_column * 13) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 14), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_14_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 14), hourly_temperature_y - (id(wf_h_fc_14_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_14_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 14), hourly_degree_y - (id(wf_h_fc_14_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_14_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 14), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_14_icon).state.c_str());
        }

        if (id(wf_h_fc_14_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65), hourly_line_x + (hourly_column * 14), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 14) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65), hourly_line_x + (hourly_column * 14) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 14), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_14_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_15_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65), hourly_line_x + (hourly_column * 15), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 15) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65), hourly_line_x + (hourly_column * 15) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 16), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_16_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 16), hourly_temperature_y - (id(wf_h_fc_16_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_16_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 16), hourly_degree_y - (id(wf_h_fc_16_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_16_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 16), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_16_icon).state.c_str());
        }

        if (id(wf_h_fc_16_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65), hourly_line_x + (hourly_column * 16), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 16) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65), hourly_line_x + (hourly_column * 16) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 16), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_16_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_17_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65), hourly_line_x + (hourly_column * 17), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 17) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65), hourly_line_x + (hourly_column * 17) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 18), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_18_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 18), hourly_temperature_y - (id(wf_h_fc_18_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_18_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 18), hourly_degree_y - (id(wf_h_fc_18_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_18_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 18), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_18_icon).state.c_str());
        }

        if (id(wf_h_fc_18_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65), hourly_line_x + (hourly_column * 18), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 18) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65), hourly_line_x + (hourly_column * 18) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 18), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_18_precip_probability_icon).state.c_str());



        if (id(wf_h_fc_19_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65), hourly_line_x + (hourly_column * 19), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 19) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65), hourly_line_x + (hourly_column * 19) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 20), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_20_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 20), hourly_temperature_y - (id(wf_h_fc_20_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_20_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 20), hourly_degree_y - (id(wf_h_fc_20_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_20_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 20), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_20_icon).state.c_str());
        }

        if (id(wf_h_fc_20_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65), hourly_line_x + (hourly_column * 20), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 20) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65), hourly_line_x + (hourly_column * 20) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 20), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_20_precip_probability_icon).state.c_str());


        if (id(wf_h_fc_21_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65), hourly_line_x + (hourly_column * 21), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 21) - hourly_line_top_narrow_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65), hourly_line_x + (hourly_column * 21) + hourly_line_top_narrow_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65));
        }



        it.printf(hourly_hour_x + (hourly_column * 22), hourly_hour_y, id(font_clock), TextAlign::BOTTOM_CENTER, "%s", id(wf_h_fc_22_local_hour_icon).state.c_str());

        it.printf(hourly_hour_x + (hourly_column * 22), hourly_temperature_y - (id(wf_h_fc_22_pixel_height).state * .65), id(font_hourly), TextAlign::BOTTOM_CENTER, "%.0f", id(wf_h_fc_22_air_temperature).state);
        it.printf(hourly_degree_x + (hourly_column * 22), hourly_degree_y - (id(wf_h_fc_22_pixel_height).state * .65), id(font_hourly_degree), TextAlign::BOTTOM_CENTER, "°");

        if (id(wf_h_fc_22_icon).has_state()) {
          it.printf(small_weather_icon_x + (hourly_column * 22), small_weather_icon_y, id(font_icons_small), TextAlign::TOP_CENTER, "%s", id(wf_h_fc_22_icon).state.c_str());
        }

        if (id(wf_h_fc_22_pixel_height).has_state()) {
          //it.line(hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65), hourly_line_x + (hourly_column * 22), hourly_line_y);
          //it.line(hourly_line_x + (hourly_column * 22) - hourly_line_top_wide_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65), hourly_line_x + (hourly_column * 22) + hourly_line_top_wide_x,
            //hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65));
        }

        it.printf(hourly_precip_prob_x + (hourly_column * 22), hourly_precip_prob_y, id(font_pie), TextAlign::BOTTOM_CENTER, id(wf_h_fc_22_precip_probability_icon).state.c_str());


        it.line(465, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65), hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65));

          it.line(hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65), hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65));
          
          it.line(hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65), hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65), hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65), hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65), hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65), hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65), hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65));  
          
          it.line(hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65), hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65), hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65), hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65), hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65), hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65), hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65), hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65), hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65), hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65), hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65), hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65), hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65), hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65), hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65), hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65));

          it.line(hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65), hourly_line_x + (hourly_column * 23), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65));

        it.line(hourly_line_x + (hourly_column * 23), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65), 960, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65));



        it.line(465, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65) + 1, hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65) + 1);

          it.line(hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65) + 1);
          
          it.line(hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65) + 1);  
          
          it.line(hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65) + 1);

          it.line(hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65) + 1, hourly_line_x + (hourly_column * 23), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65) + 1);

        it.line(hourly_line_x + (hourly_column * 23), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65) + 1, 960, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65) + 1);


        it.line(465, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65) + 2, hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65) + 2);

          it.line(hourly_line_x, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_0_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65) + 2);
          
          it.line(hourly_line_x + (hourly_column * 1), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_1_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 2), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_2_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 3), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_3_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 4), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_4_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 5), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_5_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 6), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_6_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65) + 2);  
          
          it.line(hourly_line_x + (hourly_column * 7), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_7_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 8), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_8_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 9), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_9_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 10), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_10_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 11), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_11_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 12), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_12_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 13), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_13_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 14), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_14_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 15), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_15_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 16), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_16_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 17), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_17_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 18), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_18_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 19), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_19_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 20), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_20_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 21), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_21_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65) + 2);

          it.line(hourly_line_x + (hourly_column * 22), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_22_pixel_height).state * .65) + 2, hourly_line_x + (hourly_column * 23), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65) + 2);

        it.line(hourly_line_x + (hourly_column * 23), hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65) + 2, 960, hourly_line_y - hourly_line_pad_y - (id(wf_h_fc_23_pixel_height).state * .65) + 2);



        } else if (id(${devicename}_page).state == "B") {

      //it.printf(960, 80, id(font_last_updated), TextAlign::TOP_RIGHT, "Page: %s", id(${devicename}_page).state.c_str());




        } else  {

      //it.printf(960, 80, id(font_last_updated), TextAlign::TOP_RIGHT, "Page: %s", id(${devicename}_page).state.c_str());

        }


sensor:
  - platform: wifi_signal
    name: '${devicename} WiFi Signal'
    id: '${devicename}_WiFi_Signal'
    update_interval: 60s
  - platform: uptime
    name: '${devicename} Uptime'
    update_interval: 60s
  - platform: debug
    free:
      name: '${devicename} Heap Free'
    block:
      name: '${devicename} Heap Max Block'
    loop_time:
      name: '${devicename} Loop Time'
  - id: '${devicename}_battery_voltage'
    name: '${devicename} Battery Voltage'
    platform: lilygo_t5_47
    unit_of_measurement: V
    state_class: measurement
    device_class: voltage
    update_interval: 60s
  - platform: homeassistant
    entity_id: sensor.bedroom_dave_bathroom_humidity_humidity
    id: bedroom_dave_bathroom_humidity_humidity
  - platform: homeassistant
    entity_id: sensor.bedroom_red_bathroom_humidity_humidity
    id: bedroom_red_bathroom_humidity_humidity
  - platform: homeassistant
    entity_id: sensor.hallway_bathroom_humidity_humidity
    id: hallway_bathroom_humidity_humidity
  - platform: homeassistant
    entity_id: sensor.outside_humidity_humidity
    id: outside_humidity_humidity
  - platform: homeassistant
    entity_id: sensor.tyle_1st_floor_thermostat_humidity
    id: tyle_1st_floor_thermostat_humidity
  - platform: homeassistant
    entity_id: sensor.tyle_2nd_floor_thermostat_humidity
    id: tyle_2nd_floor_thermostat_humidity
  - platform: homeassistant
    entity_id: sensor.esp01_humidity
    id: esp01_humidity
  - platform: homeassistant
    entity_id: sensor.esp03_humidity
    id: esp03_humidity
  - platform: homeassistant
    entity_id: sensor.weatherflow_relative_humidity
    id: weatherflow_relative_humidity
  - platform: homeassistant
    entity_id: sensor.esp08_humidity
    id: esp08_humidity
  - platform: homeassistant
    entity_id: sensor.bedroom_dave_bathroom_humidity_temperature
    id: bedroom_dave_bathroom_humidity_temperature
  - platform: homeassistant
    entity_id: sensor.bedroom_red_bathroom_humidity_temperature
    id: bedroom_red_bathroom_humidity_temperature
  - platform: homeassistant
    entity_id: sensor.hallway_bathroom_motion_temperature
    id: hallway_bathroom_motion_temperature
  - platform: homeassistant
    entity_id: sensor.outside_humidity_temperature
    id: outside_humidity_temperature
  - platform: homeassistant
    entity_id: sensor.tyle_1st_floor_thermostat_temperature
    id: tyle_1st_floor_thermostat_temperature
  - platform: homeassistant
    entity_id: sensor.tyle_2nd_floor_thermostat_temperature
    id: tyle_2nd_floor_thermostat_temperature
  - platform: homeassistant
    entity_id: sensor.esp01_temperature
    id: esp01_temperature
  - platform: homeassistant
    entity_id: sensor.esp03_temperature
    id: esp03_temperature
  - platform: homeassistant
    entity_id: sensor.weatherflow_air_temperature
    id: weatherflow_air_temperature
  - platform: homeassistant
    entity_id: sensor.esp08_temperature
    id: esp08_temperature
  - platform: homeassistant
    entity_id: sensor.garage_door_tilt_temperature
    id: garage_door_tilt_temperature
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_day_num
    attribute: day_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_month_num
    attribute: month_num
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_air_temp_high
    attribute: air_temp_high
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_air_temp_low
    attribute: air_temp_low
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_precip_probability
    attribute: precip_probability
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_air_temperature
    attribute: air_temperature
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_relative_humidity
    attribute: relative_humidity
  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_1
    id: wf_h_fc_1_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_1
    id: wf_h_fc_1_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_1
    id: wf_h_fc_1_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_1
    id: wf_h_fc_1_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_3
    id: wf_h_fc_3_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_3
    id: wf_h_fc_3_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_3
    id: wf_h_fc_3_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_3
    id: wf_h_fc_3_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_5
    id: wf_h_fc_5_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_5
    id: wf_h_fc_5_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_5
    id: wf_h_fc_5_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_5
    id: wf_h_fc_5_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_7
    id: wf_h_fc_7_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_7
    id: wf_h_fc_7_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_7
    id: wf_h_fc_7_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_7
    id: wf_h_fc_7_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_9
    id: wf_h_fc_9_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_9
    id: wf_h_fc_9_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_9
    id: wf_h_fc_9_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_9
    id: wf_h_fc_9_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_11
    id: wf_h_fc_11_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_11
    id: wf_h_fc_11_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_11
    id: wf_h_fc_11_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_11
    id: wf_h_fc_11_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_13
    id: wf_h_fc_13_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_13
    id: wf_h_fc_13_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_13
    id: wf_h_fc_13_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_13
    id: wf_h_fc_13_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_15
    id: wf_h_fc_15_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_15
    id: wf_h_fc_15_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_15
    id: wf_h_fc_15_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_15
    id: wf_h_fc_15_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_17
    id: wf_h_fc_17_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_17
    id: wf_h_fc_17_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_17
    id: wf_h_fc_17_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_17
    id: wf_h_fc_17_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_19
    id: wf_h_fc_19_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_19
    id: wf_h_fc_19_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_19
    id: wf_h_fc_19_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_19
    id: wf_h_fc_19_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_21
    id: wf_h_fc_21_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_21
    id: wf_h_fc_21_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_21
    id: wf_h_fc_21_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_21
    id: wf_h_fc_21_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_precip_probability
    attribute: precip_probability

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_23
    id: wf_h_fc_23_air_temperature
    attribute: air_temperature

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_23
    id: wf_h_fc_23_local_hour
    attribute: local_hour

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_23
    id: wf_h_fc_23_pixel_height
    attribute: pixel_height

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_23
    id: wf_h_fc_23_precip_probability


text_sensor:
  - platform: debug
    device:
      name: '${devicename} Device Info'
      id: '${devicename}_device_info'
  - platform: homeassistant
    entity_id: sensor.weatherflow_precipitation_intensity
    id: wf_precipitation_intensity
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_0
    id: wf_d_fc_0_precip_type
    attribute: precip_type
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_1
    id: wf_d_fc_1_precip_type
    attribute: precip_type
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_day_name
    attribute: day_name
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_icon
    attribute: icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_precip_icon
    attribute: precip_icon
  - platform: homeassistant
    entity_id: sensor.weatherflow_daily_forecast_2
    id: wf_d_fc_2_precip_type
    attribute: precip_type




  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_0
    id: wf_h_fc_0_local_hour_icon
    attribute: local_hour_icon


  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_2
    id: wf_h_fc_2_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_4
    id: wf_h_fc_4_local_hour_icon
    attribute: local_hour_icon








  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_6
    id: wf_h_fc_6_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_8
    id: wf_h_fc_8_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_10
    id: wf_h_fc_10_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_12
    id: wf_h_fc_12_local_hour_icon
    attribute: local_hour_icon


    
  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_14
    id: wf_h_fc_14_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_16
    id: wf_h_fc_16_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_18
    id: wf_h_fc_18_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_20
    id: wf_h_fc_20_local_hour_icon
    attribute: local_hour_icon



  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_precip_probability_icon
    attribute: precip_probability_icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_conditions
    attribute: conditions

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_icon
    attribute: icon

  - platform: homeassistant
    entity_id: sensor.weatherflow_hourly_forecast_22
    id: wf_h_fc_22_local_hour_icon
    attribute: local_hour_icon

  - platform: homeassistant
    entity_id: input_select.${devicename}_page
    id: '${devicename}_page'
    on_value:
      then:
        - component.update: '${devicename}_display'


  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_conditions
    attribute: conditions
  - platform: homeassistant
    entity_id: sensor.weatherflow_current_conditions
    id: wf_current_conditions_icon
    attribute: icon
    on_value:
      then:
        - script.execute: all_data_received
script:
  - id: all_data_received
    then:
      - component.update: '${devicename}_display'
      - delay: 5s
      - if:
          condition:
            binary_sensor.is_on: '${devicename}_prevent_deep_sleep'
          then:
            - logger.log: 'Skipping sleep, per prevent_deep_sleep'
            - deep_sleep.prevent: deep_sleep_control
          else:
            - script.execute: enter_sleep
  - id: enter_sleep
    then:
      - if:
          condition:
            lambda: |-
              auto time = id(ntp).now();
              if (!time.is_valid()) { 
                return false;
              }
              return (time.hour < 6); 
          then:
            - logger.log: 'Nighttime, entering long sleep for ${night_sleep_time}'
            - deep_sleep.enter:
                id: deep_sleep_control
                sleep_duration: '${night_sleep_time}'
          else:
            - logger.log: 'Daytime, entering short sleep for ${sleep_time}'
            - deep_sleep.enter:
                id: deep_sleep_control
                sleep_duration: '${sleep_time}'
