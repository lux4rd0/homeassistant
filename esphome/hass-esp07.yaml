esphome:
  name: hass-esp07
  platform: ESP32
  board: esp32dev

# Enable logging
logger:
  baud_rate: 0

switch:
  - platform: restart
    id: esp07_restart
    name: "esp07 Restart"

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO16
    num_leds: 25
    name: "esp07 Light"
    id: esp07_light
    restore_mode: RESTORE_DEFAULT_OFF
    effects:
       - pulse:
           name: "Fast Pulse"
           transition_length: 0.5s
           update_interval: 0.5s
       - pulse:
           name: "Slow Pulse"
           # transition_length: 1s      # defaults to 1s
           update_interval: 2s
       - random:
           name: Random Effect With Custom Values
           transition_length: 5s
           update_interval: 7s
       - addressable_rainbow:
       - addressable_color_wipe:
       - addressable_scan:
       - addressable_scan:
           name: Scan Effect With Custom Values
           move_interval: 50ms
           scan_width: 2
       - addressable_twinkle:
       - addressable_random_twinkle:
       - addressable_fireworks:
       - addressable_fireworks:
           name: Fireworks Effect With Custom Values
           update_interval: 32ms
           spark_probability: 25%
           use_random_color: false
           fade_out_rate: 240
       - addressable_flicker:
       
       - addressable_lambda:
          name: "Wipe In"
          update_interval: 12ms
          lambda: |-
            static int x = 0;
            if (initial_run) {
              x = 0;
              it.all() = ESPColor::BLACK;
            }
            if (x < it.size()) {
              it[x] = current_color;
              x += 1;
            }
       - addressable_lambda:
          name: "Wipe Out"
          update_interval: 12ms
          lambda: |-
            static int x = 0;
            if (initial_run) {
              x = it.size();
            }
            if (x > 0) {
              x -= 1; 
              it[x] = ESPColor::BLACK;
            }

       - lambda:
            name: Breathing Red
            update_interval: 50ms
            lambda: |-
              static int step = 0;
              const int step_limit = 80;
              float brightness;
        
              auto call = id(esp07_light).turn_on();
              call.set_rgb(1,0,0);
      
              brightness = (float)step / ((float)step_limit / 2.0f);
      
              if(brightness > 1.0f){
              	brightness = 1.0f - (brightness - 1.0f );
              }
      
              call.set_brightness(brightness);
              call.set_white(0.0);
              call.set_transition_length(0);
              call.perform();
            
              step = ++step % step_limit; 




       - strobe:
           name: Strobe Effect With Custom Values
           colors:
             - state: true
               brightness: 100%
               red: 100%
               green: 90%
               blue: 0%
               duration: 500ms
             - state: false
               duration: 250ms
             - state: true
               brightness: 100%
               red: 0%
               green: 100%
               blue: 0%
               duration: 500ms



sensor:

  - platform: wifi_signal
    name: "esp07 WiFi Signal"
    update_interval: 60s
    
  - platform: uptime
    name: "esp07 Uptime"
    update_interval: 60s